// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package frc.robot.subsystems;

import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import com.revrobotics.ColorSensorV3;

import edu.wpi.first.wpilibj.I2C;
import edu.wpi.first.wpilibj.Solenoid;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj.util.Color;
import edu.wpi.first.wpilibj2.command.SubsystemBase;

/**
 *
 */
public class ColorSubsystem extends SubsystemBase {

    private final WPI_TalonSRX colorSpinner;
    private final Solenoid motorFlipperSolenoid;
    private final ColorSensorV3 colorSensor;
    private final I2C.Port i2cPort;

    public ColorSubsystem() {
        i2cPort = I2C.Port.kOnboard;
        colorSpinner = new WPI_TalonSRX(8);
        motorFlipperSolenoid = new Solenoid(2);
        colorSensor = new ColorSensorV3(i2cPort);

        addChild("Color Spinner", colorSpinner);
        addChild("motor flipper solenoid", motorFlipperSolenoid);
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop
        final Color detectedColor = colorSensor.getColor();
        SmartDashboard.putNumber("Red", detectedColor.red);
        SmartDashboard.putNumber("Green", detectedColor.green);
        SmartDashboard.putNumber("Blue", detectedColor.blue);
        SmartDashboard.putNumber("IR", colorSensor.getIR());
    }

    public void raiseMotor() {
        motorFlipperSolenoid.set(true);

    }

    public void lowerMotor() {
        motorFlipperSolenoid.set(false);

    }

    public void spin(double speed) {
        colorSpinner.set(speed);
    }

    public void stop() {
        spin(0);
    }

    public Color getCurrentColor() {
        return colorSensor.getColor();
    }

}
